<passage file_path=/ai_art_recognize/models.py>
from django.db import models


# 定义用于保存用户上传图片的数据库模型：
# Create your models here.


class ArtWork(models.Model):
    image = models.ImageField(upload_to='artworks/')
    uploaded_at = models.DateTimeField(auto_now_add=True)
    prediction = models.CharField(max_length=20, blank=True, null=True)

    def __str__(self):
        return f'Artwork uploaded at {self.uploaded_at}'

</passage>
<passage file_path=/ai_art_recognize/templates/upload.html>
<script>
    const uploadForm = document.getElementById('uploadForm');
    const resultDiv = document.getElementById('result');

    uploadForm.addEventListener('submit', function(event) {
        event.preventDefault();

        const formData = new FormData(uploadForm);

        fetch("{% url 'upload_artwork' %}", {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.result) {
                    resultDiv.innerHTML = `Prediction: <strong>${data.result}</strong>`;
                } else if (data.error) {
                    resultDiv.innerHTML = `Error: ${data.error}`;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                resultDiv.innerHTML = 'An error occurred while proc
</passage>
<passage file_path=/ai_art_recognize/templates/upload.html>
<body>
<h1>Upload Your Artwork for AI Classification</h1>

<form id="uploadForm" enctype="multipart/form-data" method="POST" action="{% url 'upload_artwork' %}">
    {% csrf_token %}
    <input type="file" name="image" id="imageInput" accept="image/*" required>
    <button type="submit">Upload</button>
</form>
</passage>
<passage file_path=/ai_art_recognize/forms.py>
# 创建表单类：
from django import forms
from .models import ArtWork


class ArtWorkForm(forms.ModelForm):
    class Meta:
        model = ArtWork
        fields = ['image']

</passage>
<passage file_path=/ai_art_recognize/templates/upload.html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Artwork Classification</title>
    <style>
        body { font-family: Arial, sans-serif; }
        h1 { color: #333; }
        form { margin-bottom: 20px; }
        .result { margin-top: 20px; font-size: 1.2em; }
    </style>
</head>
</passage>
<passage file_path=/ai_art_recognize/tests.py>
from django.test import TestCase

# Create your tests here.

</passage>
<passage file_path=/art_recognization_djangoProject/urls.py>
"""
URL configuration for art_recognization_djangoProject project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""

from django.contrib import admin
from django.urls import path, include
from ai_art_recognize import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.home, name='home'),  # This is the root URL pointing to 'home' view
    path('art/', include('ai_art_recognize.urls')),
]

</passage>
<passage file_path=/art_recognization_djangoProject/wsgi.py>
"""
WSGI config for art_recognization_djangoProject project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'art_recognization_djangoProject.settings')

application = get_wsgi_application()

</passage>
<passage file_path=/ai_art_recognize/apps.py>
from django.apps import AppConfig


class AiArtRecognizeConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'ai_art_recognize'

</passage>
<passage file_path=/manage.py>
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'art_recognization_djangoProject.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()

</passage>
<passage file_path=/art_recognization_djangoProject/asgi.py>
"""
ASGI config for art_recognization_djangoProject project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'art_recognization_djangoProject.settings')

application = get_asgi_application()

</passage>
